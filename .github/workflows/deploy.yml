name: Deploy to EC2
on:
  push:
    branches:
      - main
jobs:
  deploy:
    runs-on: self-hosted
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        clean: true

    - name: Verify Python and Pip version
      run: |
        python3 --version
        python3 -m pip --version

    - name: Install dependencies
      run: |
        python3 -m pip install --user --no-cache-dir -r requirements.txt
        python3 -m pip install --user --no-cache-dir gunicorn

    - name: Stop existing processes on port 8000
      run: |
        echo "Killing processes on port 8000..."
        sudo fuser -k 8000/tcp || true
        ps aux | grep gunicorn || true  # Log any remaining Gunicorn processes

    - name: Stop existing Flask application (if running)
      run: |
        sudo systemctl stop flask_app || true
        sudo systemctl disable flask_app || true  # Prevent auto-start

    - name: Start Gunicorn
      run: |
        cd /home/ec2-user/actions-runner/_work/AutoInsights-InsightsStories/AutoInsights-InsightsStories
        nohup gunicorn --workers 3 --bind 0.0.0.0:8000 --timeout 10800 --enable-stdio-inheritance \
        --log-level debug --log-file /home/ec2-user/gunicorn.log run_initializer:app &
        echo "Gunicorn started"

    - name: Wait for Gunicorn to start
      run: sleep 10  # Increased to ensure Gunicorn is fully up

    - name: Verify Gunicorn is running
      run: |
        ps aux | grep gunicorn || true
        netstat -tulnp | grep 8000 || true  # Check if port 8000 is in use

    - name: Restart Nginx
      run: sudo systemctl reload nginx

    - name: Print Deployment Success
      run: echo "Deployment successful!"